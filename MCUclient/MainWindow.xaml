<Window x:Class="MCUclient.MainWindow"
        x:Name="MainWnd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MCUclient"
        mc:Ignorable="d"
        Title=" Minecraft updater" Height="600 px" Width="720 px"  ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen" Icon="logo.ico" >
    <Window.Background>
        <ImageBrush/>
    </Window.Background>

    <Window.Resources>
        <Storyboard x:Key="PickAxeAnim1">
            <DoubleAnimation Storyboard.TargetName="PickAxeRotation" Storyboard.TargetProperty="Angle" To="90" BeginTime="0:0:0.1" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <ExponentialEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetName="MainWnd" Storyboard.TargetProperty="Height" To="600" BeginTime="0:0:0.4" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <ExponentialEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="PickAxeAnim2">

            <DoubleAnimation Storyboard.TargetName="PickAxeRotation" Storyboard.TargetProperty="Angle" To="0" BeginTime="0:0:0.1" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <ExponentialEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetName="MainWnd" Storyboard.TargetProperty="Height" To="400" BeginTime="0:0:0.1" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <ExponentialEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <DoubleAnimation Storyboard.TargetName="MainWnd" Storyboard.TargetProperty="Height" To="400" BeginTime="0:0:0.1" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <ExponentialEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="OptButton1Expand" FillBehavior="Stop">

            <DoubleAnimation Storyboard.TargetName="OptButton1" Storyboard.TargetProperty="Width" To="200" BeginTime="0:0:0.1" Duration="0:0:0.5" >

            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Key="OptButton1Collapse" FillBehavior="Stop">

            <DoubleAnimation Storyboard.TargetName="OptButton1" Storyboard.TargetProperty="Width" To="60" BeginTime="0:0:0.1" Duration="0:0:0.5" >

            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="TabsColapse" >
            <DoubleAnimation Storyboard.TargetName="tcInfo" Storyboard.TargetProperty="Height" To="60" BeginTime="0:0:0.0" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="TabsExpand" >
            <DoubleAnimation Storyboard.TargetName="tcInfo" Storyboard.TargetProperty="Height" To="200" BeginTime="0:0:0.0" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <QuarticEase EasingMode="EaseInOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>


        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="28" Height="28">
                                <Grid x:Name="markGrid">

                                    <Path x:Name="optionMark" Data="M25.934948,3.486519 L12.21558,25.930269 11.756264,25.930269 0,14.800934 3.319264,10.036703 11.063,17.351741 21.666606,4.348758E-05 25.934948,3.486519 z" Margin="0,0,0,-2.5" Opacity="0" Stretch="None" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" VerticalAlignment="Stretch">


                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF77FF61" Offset="1"/>
                                                <GradientStop Color="#FF149300"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!-- Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/ -->
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <!--Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/-->
                                <!--Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <!--Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/-->
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <!--Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/-->
                                <!--Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0"  Margin="0" Background="#B2000000">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="#00000000" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" TextBlock.Foreground="#FFFFFF" ContentSource="Header" Focusable="False" TextBlock.FontFamily="/MCUclient;component/#Gnomoria_rus" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <!--Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/-->
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <!--Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/-->
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <!--Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/-->
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <!--Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/-->
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    <Grid ClipToBounds="True" Background="Black" >

        <Image Source="minecraft_wallpaper_by_philuppus-d4q03oc.png" HorizontalAlignment="Left" Width="930" Height="624.667" VerticalAlignment="Top" Margin="-85.5,0,-130.5,-53.667" Opacity="0.7"/>
        <!--  Grid.Background>
            <ImageBrush ImageSource="minecraft_wallpaper_by_philuppus-d4q03oc.png" Stretch="UniformToFill">
                <ImageBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                        <RotateTransform CenterY="0.5" CenterX="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </ImageBrush.RelativeTransform>
            </ImageBrush>
        </Grid.Background -->
        <TextBlock FontFamily="/MCUclient;component/#MineCrafter 3" FontSize="32" TextAlignment="Center" Margin="0,30.667,0,0" FontStretch="Condensed" Height="48" VerticalAlignment="Top" RenderTransformOrigin="1,1" FontWeight="Bold" TextDecorations="{x:Null}">
            <TextBlock.Effect>
                <DropShadowEffect BlurRadius="2" ShadowDepth="3"/>
            </TextBlock.Effect>
            <TextBlock.Background>
                <ImageBrush Stretch="UniformToFill"/>
            </TextBlock.Background>
            <TextBlock.Foreground>
                <ImageBrush ImageSource="StoneTile.png" TileMode="Tile" ViewportUnits="Absolute" Viewport="0,0,64,64">
                    <ImageBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform AngleY="0" AngleX="0" CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform Angle="0" CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </ImageBrush.RelativeTransform>
                </ImageBrush>
            </TextBlock.Foreground>Minecraft Mods Updater</TextBlock>
        <Button x:Name="btnUpdate" IsEnabled="True" Content="Обновить" Margin="241,286,0,0" Height="68" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="18" HorizontalAlignment="Left"  Click="Button_Click_1" Width="146" VerticalAlignment="Top" Style="{DynamicResource ButtonStyle1}">

        </Button>


        <CheckBox x:Name="cbModsOnly" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="17" Content="Только моды" HorizontalAlignment="Left" Margin="17,321,0,0" VerticalAlignment="Top" Style="{DynamicResource CheckBoxStyle1}" Background="#19170000" Foreground="White" BorderBrush="White" Height="33" Width="200">
            <CheckBox.Effect>
                <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
            </CheckBox.Effect>
        </CheckBox>
        <CheckBox x:Name="cbClientOnly" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="17" Content="Полный клиент" HorizontalAlignment="Left" Margin="17,286,0,0" VerticalAlignment="Top" Style="{DynamicResource CheckBoxStyle1}" Background="#19170000" Foreground="White" BorderBrush="White" Height="33" Width="219">
            <CheckBox.Effect>
                <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
            </CheckBox.Effect>
        </CheckBox>

        <CheckBox x:Name="cbX64" IsEnabled="False" Visibility="Hidden" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="17" Content="x64" HorizontalAlignment="Left" Margin="515,321,0,0" VerticalAlignment="Top" Style="{DynamicResource CheckBoxStyle1}" Background="#19170000" Foreground="#FF7C7C7C" BorderBrush="White" Height="33" Width="83">
            <CheckBox.Effect>
                <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
            </CheckBox.Effect>
        </CheckBox>
        <CheckBox x:Name="cbX86" Visibility="Hidden"  IsEnabled="False" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="17" Content="x86" HorizontalAlignment="Left" Margin="515,288,0,0" VerticalAlignment="Top" Style="{DynamicResource CheckBoxStyle1}" Background="#19170000" Foreground="#FF7C7C7C" BorderBrush="White" Height="33" Width="83">
            <CheckBox.Effect>
                <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
            </CheckBox.Effect>
        </CheckBox>


        <StackPanel x:Name="spProgres" Orientation="Vertical" Margin="0,152.333,0,97.334" Visibility="Hidden">
            <Grid  Height="46" Width="460" >

                <ProgressBar x:Name="pbLava"  Value="30" LargeChange="0" AllowDrop="True" Background="#26FFFFFF" Grid.ColumnSpan="2" >
                    <ProgressBar.Foreground>
                        <ImageBrush  ImageSource="water.jpg" ViewportUnits="Absolute" Viewport="0,0,60,60" Stretch="Uniform" TileMode="Tile"/>
                    </ProgressBar.Foreground>
                </ProgressBar>
                <Grid>
                    <Grid.Background>
                        <ImageBrush ImageSource="glass.png" Stretch="Uniform" TileMode="Tile" Viewport="0,0,46,46" ViewportUnits="Absolute">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Grid.Background>
                </Grid>
            </Grid>

            <TextBlock x:Name="tbStatistics" Margin="157,10,157,0" Width="400" Height="86.667" TextAlignment="Center"  FontFamily="/MCUclient;component/#Arcadepix" Foreground="White" FontSize="20" FontWeight="Bold">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="1" ShadowDepth="1"/>
                </TextBlock.Effect>Download speed: <LineBreak/> 10 kb/s <LineBreak/></TextBlock>


        </StackPanel>
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="0,367.333,0,-39" Height="162.667">
            <TextBlock  FontFamily="/MCUclient;component/#Arcadepix" FontSize="16" Foreground="White" Height="17.667" VerticalAlignment="Top" Margin="45,14,0,0" HorizontalAlignment="Left" Width="110.333">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
                </TextBlock.Effect>Server IP</TextBlock>
            <TextBox x:Name="tbAdress" VerticalContentAlignment="Center" Height="23.667" Margin="160.333,10,342.667,0" TextWrapping="Wrap" Text="127.0.0.1" VerticalAlignment="Top"  Background="#FF210000" Foreground="White" BorderBrush="Black" FontFamily="/MCUclient;component/#Arcadepix" FontSize="16">
                <TextBox.Effect>
                    <DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
                </TextBox.Effect>
            </TextBox>
            <TextBlock  FontFamily="/MCUclient;component/#Arcadepix" FontSize="16" Foreground="White" Height="18" VerticalAlignment="Top" Margin="45,55,0,0" HorizontalAlignment="Left" Width="111">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
                </TextBlock.Effect><Run Text="Game dir"/></TextBlock>
            <TextBlock  FontFamily="/MCUclient;component/#Arcadepix" FontSize="16" Foreground="White" Height="18" VerticalAlignment="Top" Margin="376,14,0,0" HorizontalAlignment="Left" Width="11">
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="2" ShadowDepth="2"/>
                </TextBlock.Effect><Run Text=":"/></TextBlock>
            <TextBox x:Name="tbPort" VerticalContentAlignment="Center" Height="24" Margin="387,10,225,0" TextWrapping="Wrap" Text="127.0.0.1" VerticalAlignment="Top"  Background="#FF210000" Foreground="White" BorderBrush="Black" FontFamily="/MCUclient;component/#Arcadepix" FontSize="16">
                <TextBox.Effect>
                    <DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
                </TextBox.Effect>
            </TextBox>
            <Button x:Name="btnReconnect" Margin="514,0,146.292,119.75">
                <Image x:Name="btnImage" Source="refresh.png" RenderTransformOrigin="0.5,0.5"/>
            </Button>

            <Button Margin="45,91,0,0" HorizontalAlignment="Left" Width="201" Height="30" VerticalAlignment="Top" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="12" Click="Button_Click_2">Исключенные файлы</Button>
        </Grid>
        <TextBox x:Name="tbGameDir" VerticalContentAlignment="Center" Height="24" Margin="161,418,25,0"  Text="127.0.0.1" VerticalAlignment="Top"  Background="#FF210000" Foreground="White" BorderBrush="Black" FontFamily="/MCUclient;component/#Arcadepix" FontSize="16">
            <TextBox.Effect>
                <DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
            </TextBox.Effect>
        </TextBox>


        <TabControl x:Name="tcInfo" Margin="10,79,10,0"  Background="#CC000000" Height="200" VerticalAlignment="Top">
            <TabItem  Header="MOTD"  Style="{DynamicResource TabItemStyle1}" >
                <!-- <TextBox x:Name="tbMotd" TextWrapping="Wrap" BorderThickness="0" Margin="5,0,5,0" Background="{x:Null}" Foreground="White"  IsReadOnly="True">
                </TextBox> -->
                <WebBrowser x:Name="webMotd" Source="http://gvr-ag.ru/motd.html"></WebBrowser>
            </TabItem>
            <!--
            <TabItem Header="История обновлений"  Style="{DynamicResource TabItemStyle1}">
                <TextBox x:Name="tbHisory"  BorderThickness="0" Margin="5,0,5,0" Background="{x:Null}" Foreground="White"  IsReadOnly="True">
                </TextBox>
            </TabItem> -->
            <!-- TabItem Header="Информация"  Style="{DynamicResource TabItemStyle1}">
                <TextBox x:Name="tbInfo"  BorderThickness="0" Margin="5,0,5,0" Background="{x:Null}" Foreground="White"  IsReadOnly="True">
                </TextBox>
            </TabItem -->
            <TabItem Header="Лог"  Style="{DynamicResource TabItemStyle1}">
                <TextBox x:Name="tbLog" ScrollViewer.VerticalScrollBarVisibility="Visible"  TextWrapping="Wrap" BorderThickness="0" Margin="5,0,5,0" Background="{x:Null}" Foreground="White"  IsReadOnly="True">
                </TextBox>
            </TabItem>
        </TabControl>
        <Button Margin="628,0,8,8" Click="Button_Click" Height="68" VerticalAlignment="Bottom">
            <Button.Content>
                <Grid>
                    <Image Source="pickaxe.png" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="-1"/>
                                <SkewTransform/>
                                <RotateTransform x:Name="PickAxeRotation" Angle="0"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                </Grid>
            </Button.Content>
        </Button>
        <Button x:Name="btnStart" IsEnabled="True" Content="Запустить" Margin="392,286,0,0" Height="68" FontFamily="/MCUclient;component/#Gnomoria_rus" FontSize="16" HorizontalAlignment="Left"   VerticalAlignment="Top" Style="{DynamicResource ButtonStyle1}" Click="btnStart_Click"/>

    </Grid>
</Window>
